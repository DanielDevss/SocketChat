<!DOCTYPE html>
<html data-bs-theme="dark" lang="en">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <link rel='stylesheet' href='https://cdnjs.cloudflare.com/ajax/libs/bootstrap/5.3.3/css/bootstrap.min.css'
        integrity='sha512-jnSuA4Ss2PkkikSOLtYs8BlYIeeIK1h99ty4YfvRPAlzr377vr3CXDb7sb7eEEBYjDtcYj+AjBH3FLv5uSJuXg=='
        crossorigin='anonymous' />
    <link rel='stylesheet' href='https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.5.1/css/all.min.css'
        integrity='sha512-DTOQO9RWCH3ppGqcWaEA1BIZOC6xxalwEsw9c2QQeAIftl+Vegovlnee1c9QX4TctnWMn13TZye+giMm8e2LwA=='
        crossorigin='anonymous' />
    <title>Chat en tiempo Real</title>
</head>

<body class="bg-body py-3 bg-gradient">

    <h1 class="h2">Bienvenido, participa en el chat</h1>
    <p>Este chat es de uso libre y está trabajado con Express y Socket.io</p>
    <hr>
    <form id="formLogin">
        <div class="form-floating mb-3">
            <input type="text" name="username" class="form-control" id="inpUsername"
                placeholder="Ingresa un nombre de usuario">
            <label for="inpUsername">Nombre de Usuario</label>
        </div>
        <div>
            <button class="btn btn-primary bg-gradient">Entrar en el Chat</button>
        </div>
    </form>

    <main id="chat">
        <header class="d-flex align-items-center justify-content-between">
            <h2 id="labelUsername" class="h5">Nombre de usuario</h2>
            <button id="btnLogout" class="btn btn-sm btn-danger bg-outline"><i
                    class="fas fa-arrow-right-from-bracket"></i></button>
        </header>

        <ul id="messagesList" class="list-unstyled d-flex flex-column gap-2 my-2">

        </ul>

        <footer class="input-group">
            <input type="text" id="inpMessage" class="form-control" placeholder="Mensaje">
            <button id="btnSend" class="btn btn-success bg-gradient"><i class="fas fa-paper-plane"></i></button>
        </footer>
    </main>

    <script src='https://cdnjs.cloudflare.com/ajax/libs/bootstrap/5.3.3/js/bootstrap.min.js'
        integrity='sha512-ykZ1QQr0Jy/4ZkvKuqWn4iF3lqPZyij9iRv6sGqLRdTPkY69YX6+7wvVGmsdBbiIfN/8OdsI7HABjvEok6ZopQ=='
        crossorigin='anonymous'>
        </script>
    <script src='https://cdnjs.cloudflare.com/ajax/libs/socket.io/4.7.4/socket.io.min.js'
        integrity='sha512-skuhu6jj+sQnhLq1Txsack8VfnIrX8wL+MTFilYlFFT/NuLJm7eya7zOROs39Jy5cjASMEWqxLzijRVmKhsqWQ=='
        crossorigin='anonymous'></script>

    <script>
        // Llamamos los componentes del DOM
        const login = document.querySelector("#formLogin");
        const inpUsername = document.querySelector("#inpUsername");
        const main = document.querySelector("#chat");
        const mainLabelUsername = document.querySelector("#labelUsername");
        const messagesList = document.querySelector("#messagesList");
        const inpMessage = document.querySelector("#inpMessage");
        const btnSend = document.querySelector("#btnSend");
        const btnLogout = document.querySelector("#btnLogout")

        // Implementacion de Socket.io

        // Llamamos las funciones aqui
        if (localStorage.getItem("username")) {
            const socket = io();
            socket.on("connection", (data) => {
                messagesList.innerHTML = null;
                data?.forEach(msg => {
                    const miUser = localStorage.getItem("username");
                    if (msg.user !== miUser) {
                        createMessageRe(msg.user, msg.msg);
                    } else {
                        createMessage(msg.msg);
                    }
                });
            });
            socket.on("messages", (msg) => {
                const miUser = localStorage.getItem("username");
                if (msg.user !== miUser) {
                    createMessageRe(msg.user, msg.msg);
                } else {
                    createMessage(msg.msg);
                }
            });
            btnSend.addEventListener("click", enviarMessage);
            function enviarMessage() {
                const miMsg = inpMessage.value;
                const miUser = localStorage.getItem("username");
                const sendData = { "msg": miMsg, "user": miUser };
                inpMessage.value = null;
                if (inpMessage) {
                    socket.emit("messages", sendData);
                }
            }
        }
        verificarSesion();
        login.addEventListener("submit", iniciarSesion)
        btnLogout.addEventListener("click", salirChat);

        // Definimos las funciones aqui



        function iniciarSesion(e) {
            e.preventDefault();
            const username = inpUsername.value;
            if (username.length > 5) {
                localStorage.setItem("username", username);
                location.reload();
            } else {
                alert("Ingresa un nombre de usuario mayor a 5 carácteres.");
            }
        }

        function salirChat() {
            localStorage.clear();
            location.reload();
        }

        function verificarSesion() {
            if (localStorage.getItem("username")) {
                const username = localStorage.getItem("username");
                mainLabelUsername.innerHTML = username
                login.classList.add("d-none");
                chat.classList.remove("d-none");
            } else {
                login.classList.remove("d-none");
                chat.classList.add("d-none");
            }
        }

        function createMessageRe(user, msg) {
            const colorsMsgs = ["bg-primary", "bg-warning text-dark", "bg-danger", "bg-dark", "bg-info text-dark", "bg-white text-dark"];
            const li = document.createElement("li");
            li.className = "bg-white text-dark bg-gradient p-2 rounded-3";
            li.innerHTML = `<b>${user}: </b> ${msg}`;
            messagesList.appendChild(li);
        }
        function createMessage(msg) {
            const li = document.createElement("li");
            li.className = "bg-success bg-gradient p-2 rounded-3 ms-auto";
            li.innerHTML = msg;
            messagesList.appendChild(li);
        }

        function createConnect() {
            const username = localStorage.getItem("username");
            const li = document.createElement("li");
            li.classList = "w-100 text-center text-muted p-3";
            li.innerHTML = `${username} en el chat`;
            messagesList.appendChild(li);
        }
    </script>

    <style>
        body,
        html {
            height: 100vh;
        }

        body {
            width: min(400px, 96%);
            margin: auto;
        }

        ul {
            height: calc(100vh - 308px);
            overflow-y: auto;
            line-height: 1;
        }
        li.bg-gradient{
            width: fit-content;
            max-width: 75%;
        }
    </style>
</body>

</html>